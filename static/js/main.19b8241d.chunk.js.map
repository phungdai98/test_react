{"version":3,"sources":["components/Header/index.js","components/slider/index.js","layout/Order/Constains/constains.js","layout/Order/Manage/Tab1.js","layout/Order/Manage/Tab2.js","layout/Order/Manage/Tab3.js","layout/Order/Order.js","App.js","serviceWorker.js","reducer/index.js","actions/saga/rootSaga.js","index.js"],"names":["Header","Layout","HeaderLayout","props","useState","className","style","padding","Sider","height","window","innerHeight","SiderLayout","breakpoint","collapsedWidth","onBreakpoint","broken","console","log","onCollapse","collapsed","type","theme","mode","defaultSelectedKeys","Item","key","icon","UserOutlined","VideoCameraOutlined","UploadOutlined","DISHES","TYPE_MEANS","id","label","Option","Select","Tab1","gutter","md","name","rules","required","message","showSearch","placeholder","filterOption","input","option","children","toLowerCase","indexOf","map","item","value","min","max","defaultValue","Tab2","Set","restaurant","Tab3","form","dishes","setDishes","useEffect","filter","getFieldValue","availableMeals","includes","List","fields","add","remove","restField","display","marginBottom","align","MinusCircleOutlined","onClick","block","PlusOutlined","initialValues","quantity_people","TabPane","Tabs","Order","tabActive","setTabActive","Form","useForm","onFinish","values","layout","activeKey","onChange","centered","tab","index","quantity","marginTop","parseInt","App","path","Boolean","location","hostname","match","reducer","combineReducers","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.19b8241d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { MenuUnfoldOutlined, MenuFoldOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Header } = Layout;\r\nconst HeaderLayout = (props) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const toggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n  return (\r\n    <Header\r\n      className=\"site-layout-sub-header-background\"\r\n      style={{ padding: 0 }}\r\n    />\r\n  );\r\n};\r\n\r\nHeaderLayout.propTypes = {};\r\n\r\nexport default HeaderLayout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"./index.scss\";\r\nconst { Sider } = Layout;\r\nconst height = window.innerHeight;\r\nconst SiderLayout = (props) => {\r\n  return (\r\n    <Sider\r\n      style={{\r\n        height: height,\r\n      }}\r\n      breakpoint=\"lg\"\r\n      collapsedWidth=\"0\"\r\n      onBreakpoint={(broken) => {\r\n        console.log(broken);\r\n      }}\r\n      onCollapse={(collapsed, type) => {\r\n        console.log(collapsed, type);\r\n      }}\r\n    >\r\n      <div className=\"logo\">\r\n        <p>Logo</p>\r\n      </div>\r\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"4\"]}>\r\n        <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n          nav 1\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n          nav 2\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n          nav 3\r\n        </Menu.Item>\r\n        <Menu.Item key=\"4\" icon={<UserOutlined />}>\r\n          nav 4\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nSiderLayout.propTypes = {};\r\n\r\nexport default SiderLayout;\r\n","export const DISHES = [\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"Chicken Burger\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"name\": \"Ham Burger\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"name\": \"Cheese Burger\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"name\": \"Fries\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"name\": \"Egg Muffin\",\r\n        \"restaurant\": \"Mc Donalds\",\r\n        \"availableMeals\": [\"breakfast\"]\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"name\": \"Burrito\",\r\n        \"restaurant\": \"Taco Bell\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"name\": \"Tacos\",\r\n        \"restaurant\": \"Taco Bell\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"name\": \"Quesadilla\",\r\n        \"restaurant\": \"Taco Bell\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 9,\r\n        \"name\": \"Steak\",\r\n        \"restaurant\": \"BBQ Hut\",\r\n        \"availableMeals\": [\"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 10,\r\n        \"name\": \"Yakitori\",\r\n        \"restaurant\": \"BBQ Hut\",\r\n        \"availableMeals\": [\"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 11,\r\n        \"name\": \"Nankotsu\",\r\n        \"restaurant\": \"BBQ Hut\",\r\n        \"availableMeals\": [\"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 12,\r\n        \"name\": \"Piman\",\r\n        \"restaurant\": \"BBQ Hut\",\r\n        \"availableMeals\": [\"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 13,\r\n        \"name\": \"Vegan Bento\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\"]\r\n    },\r\n    {\r\n        \"id\": 14,\r\n        \"name\": \"Coleslaw Sandwich\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"breakfast\"]\r\n    },\r\n    {\r\n        \"id\": 15,\r\n        \"name\": \"Grilled Sandwich\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"breakfast\"]\r\n    },\r\n    {\r\n        \"id\": 16,\r\n        \"name\": \"Veg. Salad\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 17,\r\n        \"name\": \"Fruit Salad\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 18,\r\n        \"name\": \"Corn Soup\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 19,\r\n        \"name\": \"Tomato Soup\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 20,\r\n        \"name\": \"Minestrone Soup\",\r\n        \"restaurant\": \"Vege Deli\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 21,\r\n        \"name\": \"Pepperoni Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 22,\r\n        \"name\": \"Pepperoni Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 23,\r\n        \"name\": \"Hawaiian Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 24,\r\n        \"name\": \"Seafood Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 25,\r\n        \"name\": \"Deep Dish Pizza\",\r\n        \"restaurant\": \"Pizzeria\",\r\n        \"availableMeals\": [\"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 26,\r\n        \"name\": \"Chow Mein\",\r\n        \"restaurant\": \"Panda Express\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 27,\r\n        \"name\": \"Mapo Tofu\",\r\n        \"restaurant\": \"Panda Express\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 28,\r\n        \"name\": \"Kung Pao\",\r\n        \"restaurant\": \"Panda Express\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 29,\r\n        \"name\": \"Wontons\",\r\n        \"restaurant\": \"Panda Express\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 30,\r\n        \"name\": \"Garlic Bread\",\r\n        \"restaurant\": \"Olive Garden\",\r\n        \"availableMeals\": [\"breakfast\", \"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 31,\r\n        \"name\": \"Ravioli\",\r\n        \"restaurant\": \"Olive Garden\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 32,\r\n        \"name\": \"Rigatoni Spaghetti\",\r\n        \"restaurant\": \"Olive Garden\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    },\r\n    {\r\n        \"id\": 33,\r\n        \"name\": \"Fettucine Pasta\",\r\n        \"restaurant\": \"Olive Garden\",\r\n        \"availableMeals\": [\"lunch\", \"dinner\"]\r\n    }\r\n]\r\n\r\nexport const TYPE_MEANS = [\r\n    {\r\n        id: 'breakfast',\r\n        label: 'Breakfast'\r\n    },\r\n    {\r\n        id: 'lunch',\r\n        label: 'Lunch'\r\n    },\r\n    {\r\n        id: 'dinner',\r\n        label: 'Dinner'\r\n    }\r\n]","import React from 'react';\r\nimport {Col, Form, InputNumber, Row, Select} from \"antd\";\r\nimport {TYPE_MEANS} from \"../Constains/constains\";\r\n\r\nconst { Option } = Select\r\n\r\nconst Tab1 = () => {\r\n    return (\r\n        <Row gutter={16}>\r\n            <Col md={12}>\r\n                <Form.Item\r\n                    name=\"meal\"\r\n                    label=\"Please select the Meal\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please select the Meal',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Please select the Meal\"\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    >\r\n                        {\r\n                            TYPE_MEANS.map(item =>  <Option value={item.id} key={item.id}>{item.label}</Option>)\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n            </Col>\r\n            <Col md={12}>\r\n                <Form.Item\r\n                    name=\"quantity_people\"\r\n                    label=\"Please select no. of people\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please select no. of people',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <InputNumber min={1} max={10} defaultValue={1} />\r\n                </Form.Item>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Tab1;\r\n","import React from 'react';\r\nimport {Col, Form, Row, Select} from \"antd\";\r\nimport {DISHES} from \"../Constains/constains\";\r\n\r\nconst {Option} = Select\r\n\r\nconst Tab2 = () => {\r\n    const restaurants = () => {\r\n        return [...new Set(DISHES.map(item => item.restaurant))]\r\n    }\r\n    return (\r\n        <Row gutter={16}>\r\n            <Col md={12}>\r\n                <Form.Item\r\n                    name=\"restaurant\"\r\n                    label=\"Please select the Restaurant\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please select the Restaurant',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        showSearch\r\n                        placeholder=\"Please select the Restaurant\"\r\n                        filterOption={(input, option) =>\r\n                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    >\r\n                        {\r\n                            (restaurants() || []).map(item =>  <Option value={item} key={item}>{item}</Option>)\r\n                        }\r\n                    </Select>\r\n                </Form.Item>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Tab2;\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Button, Col, Form, InputNumber, Row, Select, Space} from \"antd\"\r\nimport {DISHES, TYPE_MEANS} from \"../Constains/constains\"\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport Input from \"antd/es/input/Input\";\r\n\r\nconst {Option} = Select\r\n\r\nconst Tab3 = ({ form }) => {\r\n    const [dishes, setDishes] = useState([])\r\n    useEffect(() => {\r\n        setDishes(\r\n            [...new Set(DISHES.\r\n            filter(item => item.restaurant === form.getFieldValue('restaurant') && item.availableMeals.includes(form.getFieldValue('meal'))))]\r\n        )\r\n    }, [form.getFieldValue('restaurant'), form.getFieldValue('meal')])\r\n    return (\r\n        <Row gutter={16}>\r\n            <Form.List name=\"dishes\">\r\n                {(fields, { add, remove }) => (\r\n                    <div>\r\n                        {fields.map(({ key, name, ...restField }) => (\r\n                            <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                                <Form.Item\r\n                                    {...restField}\r\n                                    name={[name, 'name']}\r\n                                    rules={[{ required: true, message: 'Missing first dish' }]}\r\n                                >\r\n                                    <Select\r\n                                        showSearch\r\n                                        placeholder=\"Please select the dish\"\r\n                                        filterOption={(input, option) =>\r\n                                            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                        }\r\n                                    >\r\n                                        {\r\n                                            (dishes || []).map(item =>  <Option value={item.name} key={item.name}>{item.name}</Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    {...restField}\r\n                                    name={[name, 'quantity']}\r\n                                    rules={[{ required: true, message: 'Missing no. of serving' }]}\r\n                                >\r\n                                    <InputNumber min={1} />\r\n                                </Form.Item>\r\n                                <MinusCircleOutlined onClick={() => remove(name)} />\r\n                            </Space>\r\n                        ))}\r\n                        <Form.Item>\r\n                            <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                                Add dish\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </div>\r\n                )}\r\n            </Form.List>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Tab3;\r\n","import React, {useState} from 'react'\r\nimport {Button, Col, Form, Row, Tabs} from 'antd'\r\nimport \"./order.scss\"\r\nimport Tab1 from \"./Manage/Tab1\"\r\nimport Tab2 from \"./Manage/Tab2\";\r\nimport Tab3 from \"./Manage/Tab3\";\r\n\r\nconst initialValues = {\r\n    dishes: [{}],\r\n    quantity_people: 1\r\n}\r\n\r\nconst {TabPane} = Tabs\r\nconst Order = props => {\r\n    const [tabActive, setTabActive] = useState(\"1\")\r\n    const [form] = Form.useForm()\r\n\r\n    function callback(key) {\r\n        setTabActive(`${key}`)\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Finish:', values)\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Form form={form} onFinish={onFinish} layout=\"vertical\" initialValues={initialValues}>\r\n                <Tabs activeKey={tabActive} onChange={callback} centered>\r\n                    <TabPane tab=\"Tab 1\" key=\"1\">\r\n                        <Tab1/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Tab 2\" key=\"2\">\r\n                        <Tab2/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Tab 3\" key=\"3\">\r\n                        <Tab3 form={form}/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Preview\" key=\"4\">\r\n                        <div>\r\n                            <p>Mean: <strong>{form.getFieldValue('meal')}</strong></p>\r\n                            <p>No. of people: <strong>{form.getFieldValue('quantity_people')}</strong></p>\r\n                            <p>Restaurant: <strong>{form.getFieldValue('restaurant')}</strong></p>\r\n                            <div>Dishes:\r\n                                <table>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Quantity</th>\r\n                                    </tr>\r\n                                    {\r\n                                        (form.getFieldValue('dishes') || []).map((item, index) => <tr\r\n                                            key={item.name + index}>\r\n                                            <td>{item.name}</td>\r\n                                            <td>{item.quantity}</td>\r\n                                        </tr>)\r\n                                    }\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Form>\r\n            <Row gutter={16} style={{marginTop: '20px'}}>\r\n                <Col md={12}>\r\n                    {parseInt(tabActive) > 1 &&\r\n                    <Button type=\"danger\" onClick={() => setTabActive(`${parseInt(tabActive) - 1}`)}>\r\n                        Previous\r\n                    </Button>}\r\n                </Col>\r\n                <Col md={12} className=\"text-right\">\r\n                    {parseInt(tabActive) < 4 &&\r\n                    <Button type=\"primary\" onClick={() => setTabActive(`${parseInt(tabActive) + 1}`)}>\r\n                        Next\r\n                    </Button>}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nOrder.propTypes = {};\r\n\r\nexport default Order;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport HeaderLayout from \"./components/Header/index\";\r\nimport SiderLayout from \"./components/slider/index\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport Screen1 from \"./layout/test/screen1\";\r\nimport Order from \"./layout/Order/Order\"\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <SiderLayout />\r\n        <Layout className=\"site-layout\">\r\n          <HeaderLayout />\r\n          <Switch>\r\n            <Route path=\"/\">\r\n              <Order />\r\n            </Route>\r\n          </Switch>\r\n        </Layout>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nconst reducer = combineReducers({});\r\nexport default reducer;\r\n","import { all } from \"redux-saga/effects\";\r\nexport default function* rootSaga() {\r\n  yield all([]);\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducer from \"./reducer/index\";\r\nimport rootSaga from \"./actions/saga/rootSaga\";\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(rootSaga);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}